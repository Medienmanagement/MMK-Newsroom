<?php

namespace Newsroom\Entity\Proxy;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class NewsroomEntityUserProxy extends \Newsroom\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    private function _load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    
    public function verifyLogin($value)
    {
        $this->_load();
        return parent::verifyLogin($value);
    }

    public function setPassword($value)
    {
        $this->_load();
        return parent::setPassword($value);
    }

    public function getId()
    {
        $this->_load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->_load();
        return parent::setId($id);
    }

    public function getLogin()
    {
        $this->_load();
        return parent::getLogin();
    }

    public function setLogin($login)
    {
        $this->_load();
        return parent::setLogin($login);
    }

    public function getTitle()
    {
        $this->_load();
        return parent::getTitle();
    }

    public function setTitle($title)
    {
        $this->_load();
        return parent::setTitle($title);
    }

    public function getFirstname()
    {
        $this->_load();
        return parent::getFirstname();
    }

    public function setFirstname($firstname)
    {
        $this->_load();
        return parent::setFirstname($firstname);
    }

    public function getLastname()
    {
        $this->_load();
        return parent::getLastname();
    }

    public function setLastname($lastname)
    {
        $this->_load();
        return parent::setLastname($lastname);
    }

    public function getDisabled()
    {
        $this->_load();
        return parent::getDisabled();
    }

    public function setDisabled($disabled)
    {
        $this->_load();
        return parent::setDisabled($disabled);
    }

    public function toArray()
    {
        $this->_load();
        return parent::toArray();
    }

    public function __get($name)
    {
        $this->_load();
        return parent::__get($name);
    }

    public function __set($name, $value)
    {
        $this->_load();
        return parent::__set($name, $value);
    }

    public function setFromArray(array $values)
    {
        $this->_load();
        return parent::setFromArray($values);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'login', 'password', 'title', 'firstname', 'lastname', 'disabled');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}